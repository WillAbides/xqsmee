// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queue.proto

package queue

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Header struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_a1db7d3982343bc1, []int{0}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Header) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type WebRequest struct {
	ReceivedAt           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=ReceivedAt,proto3" json:"ReceivedAt,omitempty"`
	Header               []*Header            `protobuf:"bytes,2,rep,name=Header,proto3" json:"Header,omitempty"`
	Host                 string               `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	Body                 string               `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WebRequest) Reset()         { *m = WebRequest{} }
func (m *WebRequest) String() string { return proto.CompactTextString(m) }
func (*WebRequest) ProtoMessage()    {}
func (*WebRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_a1db7d3982343bc1, []int{1}
}
func (m *WebRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebRequest.Unmarshal(m, b)
}
func (m *WebRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebRequest.Marshal(b, m, deterministic)
}
func (dst *WebRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebRequest.Merge(dst, src)
}
func (m *WebRequest) XXX_Size() int {
	return xxx_messageInfo_WebRequest.Size(m)
}
func (m *WebRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WebRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WebRequest proto.InternalMessageInfo

func (m *WebRequest) GetReceivedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ReceivedAt
	}
	return nil
}

func (m *WebRequest) GetHeader() []*Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *WebRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *WebRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type PopRequest struct {
	QueueName            string             `protobuf:"bytes,1,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	Timeout              *duration.Duration `protobuf:"bytes,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PopRequest) Reset()         { *m = PopRequest{} }
func (m *PopRequest) String() string { return proto.CompactTextString(m) }
func (*PopRequest) ProtoMessage()    {}
func (*PopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_a1db7d3982343bc1, []int{2}
}
func (m *PopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopRequest.Unmarshal(m, b)
}
func (m *PopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopRequest.Marshal(b, m, deterministic)
}
func (dst *PopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopRequest.Merge(dst, src)
}
func (m *PopRequest) XXX_Size() int {
	return xxx_messageInfo_PopRequest.Size(m)
}
func (m *PopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PopRequest proto.InternalMessageInfo

func (m *PopRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func (m *PopRequest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type PopResponse struct {
	WebRequest           *WebRequest `protobuf:"bytes,1,opt,name=WebRequest,proto3" json:"WebRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PopResponse) Reset()         { *m = PopResponse{} }
func (m *PopResponse) String() string { return proto.CompactTextString(m) }
func (*PopResponse) ProtoMessage()    {}
func (*PopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_a1db7d3982343bc1, []int{3}
}
func (m *PopResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopResponse.Unmarshal(m, b)
}
func (m *PopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopResponse.Marshal(b, m, deterministic)
}
func (dst *PopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopResponse.Merge(dst, src)
}
func (m *PopResponse) XXX_Size() int {
	return xxx_messageInfo_PopResponse.Size(m)
}
func (m *PopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PopResponse proto.InternalMessageInfo

func (m *PopResponse) GetWebRequest() *WebRequest {
	if m != nil {
		return m.WebRequest
	}
	return nil
}

type PeekRequest struct {
	QueueName            string   `protobuf:"bytes,1,opt,name=QueueName,proto3" json:"QueueName,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeekRequest) Reset()         { *m = PeekRequest{} }
func (m *PeekRequest) String() string { return proto.CompactTextString(m) }
func (*PeekRequest) ProtoMessage()    {}
func (*PeekRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_a1db7d3982343bc1, []int{4}
}
func (m *PeekRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeekRequest.Unmarshal(m, b)
}
func (m *PeekRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeekRequest.Marshal(b, m, deterministic)
}
func (dst *PeekRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeekRequest.Merge(dst, src)
}
func (m *PeekRequest) XXX_Size() int {
	return xxx_messageInfo_PeekRequest.Size(m)
}
func (m *PeekRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeekRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeekRequest proto.InternalMessageInfo

func (m *PeekRequest) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func (m *PeekRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type PeekResponse struct {
	WebRequest           []*WebRequest `protobuf:"bytes,1,rep,name=WebRequest,proto3" json:"WebRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PeekResponse) Reset()         { *m = PeekResponse{} }
func (m *PeekResponse) String() string { return proto.CompactTextString(m) }
func (*PeekResponse) ProtoMessage()    {}
func (*PeekResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_a1db7d3982343bc1, []int{5}
}
func (m *PeekResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeekResponse.Unmarshal(m, b)
}
func (m *PeekResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeekResponse.Marshal(b, m, deterministic)
}
func (dst *PeekResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeekResponse.Merge(dst, src)
}
func (m *PeekResponse) XXX_Size() int {
	return xxx_messageInfo_PeekResponse.Size(m)
}
func (m *PeekResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeekResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeekResponse proto.InternalMessageInfo

func (m *PeekResponse) GetWebRequest() []*WebRequest {
	if m != nil {
		return m.WebRequest
	}
	return nil
}

func init() {
	proto.RegisterType((*Header)(nil), "Header")
	proto.RegisterType((*WebRequest)(nil), "WebRequest")
	proto.RegisterType((*PopRequest)(nil), "PopRequest")
	proto.RegisterType((*PopResponse)(nil), "PopResponse")
	proto.RegisterType((*PeekRequest)(nil), "PeekRequest")
	proto.RegisterType((*PeekResponse)(nil), "PeekResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueueClient is the client API for Queue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueClient interface {
	Pop(ctx context.Context, in *PopRequest, opts ...grpc.CallOption) (*PopResponse, error)
	Peek(ctx context.Context, in *PeekRequest, opts ...grpc.CallOption) (*PeekResponse, error)
}

type queueClient struct {
	cc *grpc.ClientConn
}

func NewQueueClient(cc *grpc.ClientConn) QueueClient {
	return &queueClient{cc}
}

func (c *queueClient) Pop(ctx context.Context, in *PopRequest, opts ...grpc.CallOption) (*PopResponse, error) {
	out := new(PopResponse)
	err := c.cc.Invoke(ctx, "/Queue/Pop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueClient) Peek(ctx context.Context, in *PeekRequest, opts ...grpc.CallOption) (*PeekResponse, error) {
	out := new(PeekResponse)
	err := c.cc.Invoke(ctx, "/Queue/Peek", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueServer is the server API for Queue service.
type QueueServer interface {
	Pop(context.Context, *PopRequest) (*PopResponse, error)
	Peek(context.Context, *PeekRequest) (*PeekResponse, error)
}

func RegisterQueueServer(s *grpc.Server, srv QueueServer) {
	s.RegisterService(&_Queue_serviceDesc, srv)
}

func _Queue_Pop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).Pop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Queue/Pop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).Pop(ctx, req.(*PopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Queue_Peek_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeekRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).Peek(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Queue/Peek",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).Peek(ctx, req.(*PeekRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Queue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Queue",
	HandlerType: (*QueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pop",
			Handler:    _Queue_Pop_Handler,
		},
		{
			MethodName: "Peek",
			Handler:    _Queue_Peek_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "queue.proto",
}

func init() { proto.RegisterFile("queue.proto", fileDescriptor_queue_a1db7d3982343bc1) }

var fileDescriptor_queue_a1db7d3982343bc1 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x4d, 0x6b, 0xf2, 0x40,
	0x10, 0x80, 0xd1, 0xf8, 0x81, 0xb3, 0xbe, 0x97, 0xc5, 0x43, 0xde, 0x50, 0xaa, 0xa4, 0x17, 0xa1,
	0xb0, 0x42, 0xbc, 0xd9, 0x93, 0x6d, 0x0f, 0x9e, 0xc4, 0x2e, 0x85, 0x1e, 0x4b, 0x6c, 0xa6, 0x22,
	0xd5, 0x4c, 0x34, 0xbb, 0x42, 0x7f, 0x46, 0xff, 0x71, 0xd9, 0x5d, 0x43, 0x96, 0x96, 0x96, 0xde,
	0xe6, 0x6b, 0xf7, 0x79, 0x66, 0x80, 0x1d, 0x34, 0x6a, 0x14, 0xc5, 0x91, 0x14, 0x45, 0x97, 0x1b,
	0xa2, 0xcd, 0x0e, 0x27, 0x36, 0x5b, 0xeb, 0xd7, 0x49, 0xa6, 0x8f, 0xa9, 0xda, 0x52, 0x7e, 0xee,
	0x0f, 0xbf, 0xf6, 0xd5, 0x76, 0x8f, 0xa5, 0x4a, 0xf7, 0x85, 0x1b, 0x88, 0x13, 0xe8, 0x2c, 0x30,
	0xcd, 0xf0, 0xc8, 0x39, 0xb4, 0xf2, 0x74, 0x8f, 0x61, 0x63, 0xd4, 0x18, 0xf7, 0xa4, 0x8d, 0xf9,
	0x00, 0xda, 0xa7, 0x74, 0xa7, 0x31, 0x6c, 0x8e, 0x82, 0x71, 0x4f, 0xba, 0x24, 0xfe, 0x68, 0x00,
	0x3c, 0xe1, 0x5a, 0xe2, 0x41, 0x63, 0xa9, 0xf8, 0x0c, 0x40, 0xe2, 0x0b, 0x6e, 0x4f, 0x98, 0xcd,
	0x95, 0x7d, 0xce, 0x92, 0x48, 0x38, 0xb0, 0xa8, 0xc0, 0xe2, 0xb1, 0x02, 0x4b, 0x6f, 0x9a, 0x0f,
	0x2b, 0xbc, 0x25, 0xb0, 0xa4, 0x2b, 0x5c, 0x2a, 0x3d, 0xab, 0x05, 0x95, 0x2a, 0x0c, 0x9c, 0x95,
	0x89, 0x4d, 0xed, 0x96, 0xb2, 0xf7, 0xb0, 0xe5, 0x6a, 0x26, 0x8e, 0x9f, 0x01, 0x56, 0x54, 0x54,
	0x4a, 0x17, 0xd0, 0x7b, 0x30, 0x57, 0x5a, 0xd6, 0x0b, 0xd5, 0x05, 0x3e, 0x85, 0xae, 0xb1, 0x21,
	0xad, 0xc2, 0xa6, 0xb5, 0xfd, 0xff, 0xcd, 0xf6, 0xfe, 0x7c, 0x46, 0x59, 0x4d, 0xc6, 0x33, 0x60,
	0x16, 0x50, 0x16, 0x94, 0x97, 0xc8, 0xaf, 0xfd, 0x13, 0x9c, 0x97, 0x66, 0xa2, 0x2e, 0x49, 0xaf,
	0x1d, 0xcf, 0x81, 0xad, 0x10, 0xdf, 0xfe, 0x66, 0x37, 0x80, 0xf6, 0x1d, 0xe9, 0xdc, 0xb9, 0x05,
	0xd2, 0x25, 0xf1, 0x0d, 0xf4, 0xdd, 0x17, 0x3f, 0xf0, 0x83, 0x5f, 0xf8, 0xc9, 0x12, 0xda, 0xf6,
	0x7f, 0x3e, 0x82, 0x60, 0x45, 0x05, 0x67, 0xa2, 0xbe, 0x55, 0xd4, 0x17, 0xfe, 0x5e, 0x57, 0xd0,
	0x32, 0x1c, 0xde, 0x17, 0x9e, 0x71, 0xf4, 0x4f, 0xf8, 0xf0, 0x75, 0xc7, 0xde, 0x69, 0xfa, 0x19,
	0x00, 0x00, 0xff, 0xff, 0xb7, 0x14, 0xa9, 0x2a, 0x8b, 0x02, 0x00, 0x00,
}
